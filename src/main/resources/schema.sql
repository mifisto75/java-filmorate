DROP TABLE IF EXISTS film_like_list CASCADE;
DROP TABLE IF EXISTS user_friend_list CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS mpa_ratings CASCADE;
DROP TABLE IF EXISTS film_directors CASCADE;
DROP TABLE IF EXISTS directors CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS review_like_list CASCADE;
DROP TABLE IF EXISTS events CASCADE;



CREATE TABLE IF NOT EXISTS mpa_ratings
(
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name      VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films
(
    film_id             INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name                VARCHAR NOT NULL,
    description         VARCHAR(200),
    release_date        DATE,
    duration INTEGER CHECK (duration > 0),
    rating_id       INTEGER REFERENCES mpa_ratings (rating_id)
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  INTEGER  NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genres (genre_id)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR NOT NULL UNIQUE,
    login    VARCHAR NOT NULL UNIQUE,
    name     VARCHAR NOT NULL,
    birthday DATE    NOT NULL
);

CREATE TABLE IF NOT EXISTS user_friend_list
(
    from_user_id INTEGER  NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    to_user_id   INTEGER  NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    Boolean_status     BOOLEAN NOT NULL,
    PRIMARY KEY (from_user_id, to_user_id)
);

CREATE TABLE IF NOT EXISTS film_like_list
(
    film_id INTEGER  NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    user_id INTEGER  NOT NULL REFERENCES users (user_id),
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS directors
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_directors
(
    director_id INTEGER  NOT NULL REFERENCES directors (id) ON DELETE CASCADE,
    film_id INTEGER  NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    PRIMARY KEY (director_id, film_id)
);


CREATE TABLE IF NOT EXISTS reviews
(
    review_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR(400) NOT NULL,
    is_positive BOOLEAN NOT NULL,
    user_id INTEGER NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    film_id INTEGER NOT NULL REFERENCES films (film_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_like_list
(
    review_id INTEGER NOT NULL REFERENCES reviews (review_id),
    user_id INTEGER NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    is_positive BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    time_stamp NUMERIC NOT NULL,
    user_id INTEGER NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    event_type VARCHAR NOT NULL,
    operation VARCHAR NOT NULL,
    event_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    entity_id INTEGER NOT NULL
);
